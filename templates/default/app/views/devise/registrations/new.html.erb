<style>
  .StripeElement {
    box-sizing: border-box;

    height: 40px;

    padding: 10px 12px;

    border: 1px solid #ced4da;
    border-radius: 4px;
    background-color: white;

    box-shadow: 0 1px 3px 0 #e6ebf1;
    -webkit-transition: box-shadow 150ms ease;
    transition: box-shadow 150ms ease;
  }

  .StripeElement--focus {
    /*box-shadow: 0 1px 3px 0 #ced4da;*/
  }

  .StripeElement--invalid {
    border-color: #ced4da;
  }

  .StripeElement--webkit-autofill {
    background-color: #ced4da !important;
  }

</style>

<div class="row pt-5">
  <div class="col-12 col-sm-6 offset-sm-3">
    <div class="card">
      <div class="card-body shadow pt-5">
        <%= form_for(resource, as: resource_name, url: registration_path(resource_name), html: { class: 'mb-4' }) do |f| %>
          <%= devise_error_messages! %>
          <%#= resource.errors.inspect %>
          <%= f.hidden_field :pro, value: @pro %>
          <div class="form-group">
            <label for="card-element">
              Credit or debit card
            </label>
            <div id="card-element">
              <!-- A StripeHelper Element will be inserted here. -->
            </div>

            <!-- Used to display Element errors. -->
            <div id="card-errors" class="text-red small pl-1" role="alert"></div>
          </div>

          <div class="form-group">
            <label for="signup-email">Email Address</label>
            <%= f.email_field :email, autocomplete: "email", id: 'signup-email', class: 'form-control form-control-lg', required: true %>
          </div>
          <div class="form-group">
            <label for="signup-password">Password</label>
            <%= f.password_field :password, autocomplete: "new-password", id: 'signup-password', class: 'form-control form-control-lg', required: true %>
          </div>

          <% if devise_mapping.rememberable? -%>
            <div class="custom-control custom-checkbox align-items-center">
              <%= f.check_box :remember_me, checked: true, class: 'custom-control-input', id: 'check-remember' %>
              <label class="custom-control-label text-small" for="check-remember">Remember me next time</label>
            </div>
          <% end -%>

          <div class="text-center pt-5">
            <%= f.submit "Purchase Now", id: "createAccount", class: 'btn btn-lg btn-success' %>
          </div>

          <div class="pt-4 text-center">
            <%= render "devise/shared/links" %>
          </div>

        <% end %>
      </div>
    </div>
  </div>
</div>

<%= content_for(:javascript) do %>
  <script>
      var stripe = Stripe('<%= ENV["STRIPE_PUBLISHABLE_KEY"] %>');
      var elements = stripe.elements();
      var style = {
          base: {
              fontSize: '16px',
              color: "#32325d",
          }
      };
      var card = elements.create('card', {style: style});
      card.mount('#card-element');

      card.addEventListener('change', function (event) {
          var displayError = document.getElementById('card-errors');
          if (event.error) {
              displayError.textContent = event.error.message;
          } else {
              displayError.textContent = '';
          }
      });

      var form = document.getElementById('new_user');
      form.addEventListener('submit', function (event) {
          event.preventDefault();

          stripe.createToken(card).then(function (result) {
              if (result.error) {
                  // Inform the customer that there was an error.
                  var errorElement = document.getElementById('card-errors');
                  errorElement.textContent = result.error.message;
                  $("#createAccount").attr("disabled", false);

              } else {
                  // Send the token to your server.
                  stripeTokenHandler(result.token);
              }
          });
      });

      function stripeTokenHandler(token) {
          // Insert the token ID into the form so it gets submitted to the server
          var form = document.getElementById('new_user');
          var hiddenInput = document.createElement('input');
          hiddenInput.setAttribute('type', 'hidden');
          hiddenInput.setAttribute('name', 'stripe_token');
          hiddenInput.setAttribute('value', token.id);
          form.appendChild(hiddenInput);
          form.submit();
      }
  </script>
<% end %>
